/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.70'
    id 'jacoco'
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC9.2"
}

group 'test8'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()

    maven {
        url {
            'http://dl.bintray.com/jetbrains/spek'
        }
    }

    jcenter() // for ktlint
}

configurations {
    ktlint
    //detekt
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.70"

    testImplementation 'junit:junit:4.12'

    testImplementation 'org.jetbrains.spek:spek-api:1.1.5'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.2.70'
    testImplementation 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
    testImplementation('org.jetbrains.spek:spek-api:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testImplementation 'org.junit.platform:junit-platform-runner:1.0.0'
    testCompile 'org.jetbrains.spek:spek-data-driven-extension:1.1.5'

    ktlint "com.github.shyiko:ktlint:0.29.0"
    // additional 3rd party ruleset(s) can be specified here
    // just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and 
    // ktlint will pick them up

    //detekt 'io.gitlab.arturbosch.detekt:detekt-cli:1.0.0.RC9.2'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task ktlint(type: JavaExec, group: "kotlin verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt", '--reporter=checkstyle,output=ktlint.xml'
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
//check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "kotlin formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

//task detekt(type: JavaExec) {
//    main = "io.gitlab.arturbosch.detekt.cli.Main"
//    classpath = configurations.detekt
//    def input = "./"
//    def config = "default-detekt-config.yml"
//    def filters = ".*/build/.*,.*/resources/.*"
//    def reports = "detekt.html"
//    def params = [ '-i', input, '-c', config, '-f', filters, '-r', reports]
//    args(params)
//}
//check.dependsOn detekt

detekt {
    filters = ".*/resources/.*, .*/build/.*"
    config = files("/home/sony/detekt/detekt-cli/build/resources/main/default-detekt-config.yml")

    reports {
        html {
            enabled = true
            destination = file("detekt.html")
        }
        xml {
            enabled = true
            destination = file("detekt.xml")
        }
    }
}
