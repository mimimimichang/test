version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "Application/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "Application/build.gradle" }}
#      - run:
#          name: Run Tests(Kotlin)
#          command: |
#                   cd kotlinApp
#                   ./gradlew --info test
#          when: always
      - run:
          name: Run Android Lint(Kotlin)
          command: |
                   cd kotlinApp
                   ./gradlew --info lint
          when: always
      - run:
          name: Run ktint
          command: |
                   git clone --depth 1 git@github.com:mimimimichang/tools.git
                   tools/ktlint/ktlint kotlinApp/Application/src/**/*.kt --reporter=plain,output=kotlinApp/Application/build/reports/ktlint.txt
          when: always
      - run:
          name: Run detekt
          command: |
                   java -jar tools/detekt/detekt-cli-1.0.0.RC9-all.jar -i kotlinApp/Application/src -r html:kotlinApp/Application/build/reports/detekt.html --debug --parallel
          when: always
      - run:
          name: Run Build(Java)
          command: |
                   cd Application
                   ../gradlew --info build
          when: always
 #     - run:
 #         name: Run Tests(Java)
 #         command: |
 #                  cd Application
 #                  ../gradlew --info test
 #         when: always
      - run:
          name: Run Android Lint(Java)
          command: |
                   cd Application
                   ../gradlew --info lint
          when: always
      - run:
          name: Run checkstyle
          command: |
                   java -jar tools/checkstyle/checkstyle-8.13-all.jar -c /google_checks.xml -f plain -o Application/build/reports/checkstyle.txt -d Application/src/main/java
          when: always
      - run:
          name: Run pmd
          command: |
                   #tools/pmd/bin/run.sh pmd -d Application/src/main/java -f html -r Application/build/reports/pmd.html -l java -R ${PMD_RULESET} -auxclasspath ${CLASSES} -V
                   tools/pmd/bin/run.sh pmd -d Application/src/main/java -f html -r Application/build/reports/pmd.html -l java -R category/java/bestpractices.xml,category/java/codestyle.xml,category/java/design.xml,category/java/documentation.xml,category/java/errorprone.xml,category/java/multithreading.xml,category/java/performance.xml,category/java/security.xml -V
          when: always
      - run:
          name: Run spotbugs
          command: |
                   java -jar tools/spotbugs/spotbugs.jar -textui -low -html -output Application/build/reports/spotbugs.html -auxclasspath Application/build/intermediates/javac Application/build/intermediates
          when: always
      - run:
          name: Run spek
          command: |
                   cd sample4spek
                   ./gradlew --info test
          when: always
      - run:
          name: Run jacoco
          command: |
                   java -jar tools/jacoco/jacococli.jar report sample4spek/build/**/**.exec --classfiles sample4spek/build/classes/**/main --html sample4spek/build/reports/coverage --sourcefiles sample4spek/src/main/**/**.kt
          when: always
      - store_artifacts:
          path: kotlinApp/Application/build/reports
          destination: kotlin_reports
      - store_artifacts:
          path: Application/build/reports
          destination: java_reports
      - store_artifacts:
          path: sample4spek/build/reports
          destination: spek_reports
      - store_test_results:
          path: kotlinApp/Application/build/test-results
      - store_test_results:
          path: Application/build/test-results
      - store_test_results:
          path: sample4spek/build/test-results
